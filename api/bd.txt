bancadas
chamados
consertos
funcionarios
patrimonios
_auditoria
_exceptions
_logins


// ! Query necessária:

Para implementar a consulta que retorna todos os patrimônios de uma determinada bancada, é necessário modificar o resolver de Bancada e a definição de tipo de Bancada.

Primeiramente, é preciso adicionar uma relação entre as tabelas de Bancada e Patrimonio. É possível fazer isso adicionando uma coluna idBancada na tabela de Patrimonio que referencia a coluna idBancada na tabela de Bancada. Em seguida, é preciso adicionar uma nova propriedade patrimonios na definição de tipo de Bancada, que será um vetor de objetos do tipo Patrimonio.

Resolver de Bancada modificado:

csharp
Copy code
const knex = require('../../../mysql');

export default {
  Query: {
    bancadas: async () => {
      return knex('bancadas').select('*');
    },
    bancada: async (_, { idBancada }) => {
      const bancada = await knex('bancadas').where('idBancada', idBancada).first();
      return bancada;
    },
    bancadasByLocal: async (_, { local }) => {
      const bancadas = await knex('bancadas').where('local', local);
      return bancadas;
    },
    bancadasByStatus: async (_, { status }) => {
      const bancadas = await knex('bancadas').where('status', status);
      return bancadas;
    },
  },
  Bancada: {
    patrimonios: async (bancada) => {
      const patrimonios = await knex('patrimonio').where('idBancada', bancada.idBancada);
      return patrimonios;
    },
  },
};
Definição de tipo de Bancada modificada:

yaml
Copy code
type Bancada {
  idBancada: ID!
  local: String!
  status: Int!
  patrimonios: [Patrimonio]!
}